Initial Design Code ( Before integrating API -- the chat interface )

import { useState } from "react";

import "./App.css";

function App() {

  const [message, setMessage] = useState("");
  const [messages, setMessages] = useState([]);

  const sendMessage = (e) => {
      if (e.key === 'Enter') {
        setMessage("")
        setMessages([...messages, {content: message, role: "user" }])
      }
  }

  return (
    <div className="wrapper">
      <div className="chat-wrapper">
        <div className="chat-history">
          <div>
            {messages.map((message, index) =>  (
              <div
                key={index}
                className={`message${message.role === "user" ? " user" : ""}`}
              >
                {message.role === "user" ? "Me: " : "AI: "}
                {message.content}
              </div>
            ))}
          </div>
        </div>
        <input
          type="text"
          placeholder="Type a message..."
          value={message}
          onChange={(e) => setMessage(e.target.value)}
          onKeyUp={sendMessage}
        />
      </div>
    </div>
  );
}

export default App;




setMessage & setMessages Explanation


 - Essentially we define two pieces of state. The `message` which is used to store the message
   that's been typed in by user.

 - That's the message that we type in the box. The way that React works is if we want to do
   what's called a controlled component which means we keep track of the input that has been
   entered into that component, then we need to store it as state and need to update it using
   setMessage, the setter for the state update essentially.





